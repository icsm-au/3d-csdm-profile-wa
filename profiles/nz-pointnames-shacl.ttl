@prefix nzp:            <https://linked.data.gov.au/def/csdm/nzprofilerules/pts/> .
@prefix rdf:            <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs:           <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh:             <http://www.w3.org/ns/shacl#> .
@prefix xsd:            <http://www.w3.org/2001/XMLSchema#> .
@prefix geojson:        <https://purl.org/geojson/vocab#> .
@prefix csdm:           <https://linked.data.gov.au/def/csdm/> .
@prefix dct:            <http://purl.org/dc/terms/> .
@prefix com:            <http://purl.org/commerce#> .
@prefix commonpatterns: <https://linked.data.gov.au/def/csdm/commonpatterns/> .
@prefix surv: <https://linked.data.gov.au/def/csdm/surveyfeatures/> .

nzp:testLabelPartsPresent
    a                  sh:NodeShape ;
    sh:targetClass surv:CadastralMark, surv:GeodeticMark , surv:BoundaryMark , surv:SurveyPoint ;
    sh:property        [ sh:path     ( commonpatterns:name dct:hasPart commonpatterns:namePartType ) ;
                         sh:name     "NameParts includes PlanType" ;
                         sh:hasValue "PlanType" ; ] ;
    sh:property        [ sh:path     ( commonpatterns:name dct:hasPart commonpatterns:namePartType ) ;
                         sh:name     "Survey Point name parts includes Stamp" ;
                         sh:hasValue "Stamp" ; ] ;
    sh:property        [ sh:path     ( commonpatterns:name dct:hasPart commonpatterns:namePartType ) ;
                         sh:name     "Survey Point name parts includes Source" ;
                         sh:hasValue "Source" ; ] ;
    sh:property        [ sh:path       ( commonpatterns:name rdfs:label );
                         sh:name        "NameParts in Label" ;
                         sh:description "Test labelled parts present in compound label if present" ;
                         sh:sparql      [ sh:message "Name parts must exist in label if present" ;
                                          sh:select  """
        PREFIX dct: <http://purl.org/dc/terms/>
        PREFIX rdfs:    <http://www.w3.org/2000/01/rdf-schema#>
      SELECT $this (rdfs:label as ?path) ?value
        WHERE {
        $this dct:hasPart ?p.
        $this rdfs:label ?label .
        ?p rdfs:label ?value
        FILTER ( ! CONTAINS( ?label, ?value) )
        }
""" ; ] ]
.
